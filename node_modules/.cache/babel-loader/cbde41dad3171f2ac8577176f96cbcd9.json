{"ast":null,"code":"import _slicedToArray from \"/Users/kingleer/lab31/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/kingleer/lab31/src/app.js\";\nimport React, { useState, useEffect, useReducer } from 'react';\nimport Title from './components/title/title.js'; // State Only\n// import ToDo from './components/todo/todo.js';\n// API Connected (Live Data)\n\nimport ToDo from './components/todo/todo-connected.js';\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'enter':\n      return [...state, state.words = action.payload.toUpperCase()];\n\n    case 'reset':\n      return state = '';\n  }\n}\n\nlet initialState = '';\nlet state = {};\nstate.words = 'default words in state'; // useEffect(() => {\n//   const handleResize = () => {\n//     setWindowWidth(window.outerWidth);\n//   };\n//   window.addEventListener(\"resize\", handleResize);\n//   return () => {\n//     window.removeEventListener(\"resize\", handleResize);\n//   };\n// });\n\nfunction App() {\n  const _useState = useState(initialState),\n        _useState2 = _slicedToArray(_useState, 2),\n        input = _useState2[0],\n        setInput = _useState2[1];\n\n  const _useReducer = useReducer(reducer, initialState),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1];\n\n  useEffect(() => {\n    const handleTitle = words => {\n      document.title = words;\n    };\n\n    window.addEventListener('title', handleTitle(state.words));\n    return () => window.removeEventListener('title', handleTitle(state.words));\n  });\n\n  function _handleChange(input) {\n    setInput(input);\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(ToDo, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), React.createElement(Title, {\n    title: state.words,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), React.createElement(\"form\", {\n    onSubmit: () => _handleChange(input),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/kingleer/lab31/src/app.js"],"names":["React","useState","useEffect","useReducer","Title","ToDo","reducer","state","action","type","words","payload","toUpperCase","initialState","App","input","setInput","dispatch","handleTitle","document","title","window","addEventListener","removeEventListener","_handleChange"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,UAApC,QAAqD,OAArD;AACA,OAAOC,KAAP,MAAkB,6BAAlB,C,CAEA;AACA;AAEA;;AACA,OAAOC,IAAP,MAAiB,qCAAjB;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAA+B;AAC7B,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,OAAL;AACE,aAAQ,CAAC,GAAGF,KAAJ,EAAWA,KAAK,CAACG,KAAN,GAAcF,MAAM,CAACG,OAAP,CAAeC,WAAf,EAAzB,CAAR;;AACF,SAAK,OAAL;AACE,aAAQL,KAAK,GAAG,EAAhB;AAJJ;AAMD;;AAED,IAAIM,YAAY,GAAG,EAAnB;AACA,IAAIN,KAAK,GAAG,EAAZ;AACAA,KAAK,CAACG,KAAN,GAAc,wBAAd,C,CAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;;AAIA,SAASI,GAAT,GAAc;AAAA,oBACcb,QAAQ,CAACY,YAAD,CADtB;AAAA;AAAA,QACLE,KADK;AAAA,QACEC,QADF;;AAAA,sBAEcb,UAAU,CAACG,OAAD,EAAUO,YAAV,CAFxB;AAAA;AAAA,QAELN,KAFK;AAAA,QAEEU,QAFF;;AAIZf,EAAAA,SAAS,CAAC,MAAK;AACb,UAAMgB,WAAW,GAAIR,KAAD,IAAW;AAC7BS,MAAAA,QAAQ,CAACC,KAAT,GAAiBV,KAAjB;AACD,KAFD;;AAGAW,IAAAA,MAAM,CAACC,gBAAP,CAAwB,OAAxB,EAAiCJ,WAAW,CAACX,KAAK,CAACG,KAAP,CAA5C;AACA,WAAO,MAAOW,MAAM,CAACE,mBAAP,CAA2B,OAA3B,EAAoCL,WAAW,CAACX,KAAK,CAACG,KAAP,CAA/C,CAAd;AACD,GANQ,CAAT;;AAOA,WAASc,aAAT,CAAuBT,KAAvB,EAA6B;AAC3BC,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACD;;AACD,SACE,0CACF,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADE,EAEF,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAER,KAAK,CAACG,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFE,EAGF;AAAM,IAAA,QAAQ,EAAE,MAAKc,aAAa,CAACT,KAAD,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHE,CADF;AAOD;;AAED,eAAeD,GAAf","sourcesContent":["import React, {useState, useEffect, useReducer} from 'react';\nimport Title from './components/title/title.js';\n\n// State Only\n// import ToDo from './components/todo/todo.js';\n\n// API Connected (Live Data)\nimport ToDo from './components/todo/todo-connected.js';\n\nfunction reducer(state, action){\n  switch (action.type){\n    case 'enter':\n      return ([...state, state.words = action.payload.toUpperCase()])\n    case 'reset':\n      return (state = '')\n  }\n}\n\nlet initialState = ''\nlet state = {}\nstate.words = 'default words in state'\n\n// useEffect(() => {\n//   const handleResize = () => {\n//     setWindowWidth(window.outerWidth);\n//   };\n\n//   window.addEventListener(\"resize\", handleResize);\n\n//   return () => {\n//     window.removeEventListener(\"resize\", handleResize);\n//   };\n// });\n\n\n\nfunction App(){\n  const [input, setInput] = useState(initialState)\n  const [state, dispatch] = useReducer(reducer, initialState)\n\n  useEffect(() =>{\n    const handleTitle = (words) => {\n      document.title = words\n    }\n    window.addEventListener('title', handleTitle(state.words))\n    return () =>  window.removeEventListener('title', handleTitle(state.words))\n  })\n  function _handleChange(input){\n    setInput(input)\n  }\n  return (\n    <>\n  <ToDo/>\n  <Title title={state.words}/>\n  <form onSubmit={()=> _handleChange(input)}></form>\n  </>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}